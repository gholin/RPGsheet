{"ast":null,"code":"import _classCallCheck from \"/Users/sshepherd/Desktop/code/hackweek-feb2019/shep-react/rpgsheet_express/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sshepherd/Desktop/code/hackweek-feb2019/shep-react/rpgsheet_express/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sshepherd/Desktop/code/hackweek-feb2019/shep-react/rpgsheet_express/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sshepherd/Desktop/code/hackweek-feb2019/shep-react/rpgsheet_express/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sshepherd/Desktop/code/hackweek-feb2019/shep-react/rpgsheet_express/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/sshepherd/Desktop/code/hackweek-feb2019/shep-react/rpgsheet_express/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/sshepherd/Desktop/code/hackweek-feb2019/shep-react/rpgsheet_express/client/src/components/StatsForm.js\";\nimport React, { Component } from 'react'; // import NameField from './NameField'\n// import SaveButton from './SaveButton'\n// import StatGrid from './StatGrid'\n\nimport Form from 'react-bootstrap/Form';\nimport '../styles/StatsForm.css';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport '../styles/StatGrid.css';\nimport '../styles/NameField.css';\nimport '../styles/SaveButton.css';\n\nvar StatsForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StatsForm, _Component);\n\n  function StatsForm(props) {\n    var _this;\n\n    _classCallCheck(this, StatsForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StatsForm).call(this, props)); // this.state = {\n    //   character: [\n    //     {\n    //       name: 'default',\n    //       str: 10,\n    //       dex: 10,\n    //       int: 10,\n    //       skills: ['living']\n    //     }\n    //   ]\n    // }\n\n    _this.state = {\n      character: character\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(StatsForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('/default-char').then(function (res) {\n        return res.json();\n      }).then(function (character) {\n        return _this2.setState({\n          character: character\n        });\n      });\n    } //\n    // const values = {}[this.refs.name.value,\n    //   this.refs.strength.value,\n    //   this.refs.dexterity.value,\n    //   this.refs.intelligence.value\n    // ];\n\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n    }\n  }, {\n    key: \"calculateValue\",\n    value: function calculateValue() {// if (this.refs.name.value == \"\")\n      //   this.refs.name.value = 'default';\n      // var i;\n      // for (i = 0; i < values.length; i++) {\n      //   if ()\n      // }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      // alert('A character was submitted: ' + this.state.value);\n      this.calculateValue();\n      this.state.character; // var character = {\n      //   name: this.refs.name.value,\n      //   str: this.refs.strength.value,\n      //   dex: this.refs.dexterity.value,\n      //   int: this.refs.intelligence.value,\n      //   skills: ['living'],\n      //\n      //   // methods\n      //   buildJSON: function() {\n      //     return JSON.stringify(this);\n      //   }\n      // };\n\n      alert('Character:' + this.state);\n      event.preventDefault();\n    } // function setZeroValues(stat_code) {\n    //   if (getBaseValue(stat_code) == \"\") {\n    //     getBase(stat_code).value = ZERO;\n    //   }\n    //   if (getModValue(stat_code) == \"\") {\n    //     getMod(stat_code).value = ZERO;\n    //   }\n    // };\n    //\n    // setValue(stat_code) {\n    //   setZeroValues(stat_code);\n    //   var base = getBaseValue(stat_code);\n    //   var mod = getModValue(stat_code);\n    //   var total = parseFloat(base)+parseFloat(mod);\n    //\n    //   if(isNaN(total)) {\n    //     document.getElementById(`${stat_code}-value`).innerHTML=\"Invalid stats.\";\n    //     total = 0;\n    //   }\n    //   document.getElementById(`${stat_code}-value`).value = total;\n    //   return total;\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        id: \"full-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        id: \"name-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        id: \"char-name\",\n        ref: \"name\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(Table, {\n        bordered: true,\n        size: \"sm\",\n        id: \"stat-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Stat\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Base\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"+\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Mods\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"=\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Value\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        id: \"strength\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"STR\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        id: \"str-base\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"+\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        id: \"str-mod\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"=\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        readOnly: true,\n        id: \"str-value\",\n        ref: \"strength\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        id: \"dexterity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"DEX\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        id: \"dex-base\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"+\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        id: \"dex-mod\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"=\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        readOnly: true,\n        id: \"dex-value\",\n        ref: \"dexterity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        id: \"intelligence\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"INT\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        id: \"int-base\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"+\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        id: \"int-mod\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"=\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        readOnly: true,\n        id: \"int-value\",\n        ref: \"intelligence\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }))))), React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        id: \"save\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Save\"));\n    }\n  }]);\n\n  return StatsForm;\n}(Component); // <div><NameField/></div>\n// <div><StatGrid/></div>\n// <div><SaveButton/></div>\n\n\nexport default StatsForm;","map":{"version":3,"sources":["/Users/sshepherd/Desktop/code/hackweek-feb2019/shep-react/rpgsheet_express/client/src/components/StatsForm.js"],"names":["React","Component","Form","Table","Button","StatsForm","props","state","character","handleSubmit","bind","fetch","then","res","json","setState","event","value","target","calculateValue","alert","preventDefault","handleChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import NameField from './NameField'\n// import SaveButton from './SaveButton'\n// import StatGrid from './StatGrid'\nimport Form from 'react-bootstrap/Form'\nimport '../styles/StatsForm.css';\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button';\nimport '../styles/StatGrid.css';\nimport '../styles/NameField.css';\nimport '../styles/SaveButton.css';\n\nclass StatsForm extends Component {\n  constructor(props) {\n    super(props)\n    // this.state = {\n    //   character: [\n    //     {\n    //       name: 'default',\n    //       str: 10,\n    //       dex: 10,\n    //       int: 10,\n    //       skills: ['living']\n    //     }\n    //   ]\n    // }\n    this.state = { character, }\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('/default-char')\n      .then(res => res.json())\n      .then(character => this.setState({ character }));\n  }\n\n  //\n  // const values = {}[this.refs.name.value,\n  //   this.refs.strength.value,\n  //   this.refs.dexterity.value,\n  //   this.refs.intelligence.value\n  // ];\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n\n  calculateValue() {\n    // if (this.refs.name.value == \"\")\n    //   this.refs.name.value = 'default';\n    // var i;\n    // for (i = 0; i < values.length; i++) {\n    //   if ()\n    // }\n\n  }\n\n  handleSubmit(event) {\n      // alert('A character was submitted: ' + this.state.value);\n      this.calculateValue();\n      this.state.character\n\n\n      // var character = {\n      //   name: this.refs.name.value,\n      //   str: this.refs.strength.value,\n      //   dex: this.refs.dexterity.value,\n      //   int: this.refs.intelligence.value,\n      //   skills: ['living'],\n      //\n      //   // methods\n      //   buildJSON: function() {\n      //     return JSON.stringify(this);\n      //   }\n      // };\n\n      alert('Character:' + this.state);\n      event.preventDefault();\n  }\n\n  // function setZeroValues(stat_code) {\n  //   if (getBaseValue(stat_code) == \"\") {\n  //     getBase(stat_code).value = ZERO;\n  //   }\n  //   if (getModValue(stat_code) == \"\") {\n  //     getMod(stat_code).value = ZERO;\n  //   }\n  // };\n  //\n  // setValue(stat_code) {\n  //   setZeroValues(stat_code);\n  //   var base = getBaseValue(stat_code);\n  //   var mod = getModValue(stat_code);\n  //   var total = parseFloat(base)+parseFloat(mod);\n  //\n  //   if(isNaN(total)) {\n  //     document.getElementById(`${stat_code}-value`).innerHTML=\"Invalid stats.\";\n  //     total = 0;\n  //   }\n  //   document.getElementById(`${stat_code}-value`).value = total;\n  //   return total;\n  // }\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit} id='full-form'>\n        <label id='name-field'>\n          Name:\n          <input type=\"text\" id=\"char-name\" ref=\"name\" onChange={this.handleChange}/>\n        </label>\n        <Table bordered size=\"sm\" id=\"stat-table\">\n          <thead>\n            <tr>\n              <th>Stat</th>\n              <th>Base</th>\n              <th>+</th>\n              <th>Mods</th>\n              <th>=</th>\n              <th>Value</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr id='strength'>\n              <td>STR</td>\n              <td><input type=\"number\" id=\"str-base\"/></td>\n              <td>+</td>\n              <td><input type=\"number\" id=\"str-mod\"/></td>\n              <td>=</td>\n              <td><input type=\"number\" readOnly id=\"str-value\" ref=\"strength\"/></td>\n            </tr>\n            <tr id='dexterity'>\n              <td>DEX</td>\n              <td><input type=\"number\" id=\"dex-base\"/></td>\n              <td>+</td>\n              <td><input type=\"number\" id=\"dex-mod\"/></td>\n              <td>=</td>\n              <td><input type=\"number\" readOnly id=\"dex-value\" ref=\"dexterity\"/></td>\n            </tr>\n            <tr id='intelligence'>\n              <td>INT</td>\n              <td><input type=\"number\" id=\"int-base\"/></td>\n              <td>+</td>\n              <td><input type=\"number\" id=\"int-mod\"/></td>\n              <td>=</td>\n              <td><input type=\"number\" readOnly id=\"int-value\" ref=\"intelligence\"/></td>\n            </tr>\n          </tbody>\n        </Table>\n        <Button variant=\"primary\" type=\"submit\" id=\"save\">Save</Button>\n      </Form>\n    );\n  }\n}\n// <div><NameField/></div>\n// <div><StatGrid/></div>\n// <div><SaveButton/></div>\nexport default StatsForm;\n"]},"metadata":{},"sourceType":"module"}