{"ast":null,"code":"import _classCallCheck from \"/Users/sshepherd/Desktop/code/hackweek-feb2019/shep-react/rpgsheet_express/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sshepherd/Desktop/code/hackweek-feb2019/shep-react/rpgsheet_express/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sshepherd/Desktop/code/hackweek-feb2019/shep-react/rpgsheet_express/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sshepherd/Desktop/code/hackweek-feb2019/shep-react/rpgsheet_express/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sshepherd/Desktop/code/hackweek-feb2019/shep-react/rpgsheet_express/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sshepherd/Desktop/code/hackweek-feb2019/shep-react/rpgsheet_express/client/src/components/NewCharacter.js\";\nimport React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport '../styles/StatsForm.css';\nimport '../styles/StatGrid.css';\nimport '../styles/NameField.css';\nimport '../styles/SaveButton.css';\n\nvar NewCharacter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewCharacter, _Component);\n\n  function NewCharacter(props) {\n    var _this;\n\n    _classCallCheck(this, NewCharacter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewCharacter).call(this, props));\n    _this.state = {\n      name: '',\n      stats: [{\n        name: 'STR',\n        base: 10,\n        mod: 0\n      }, {\n        name: 'DEX',\n        base: 10,\n        mod: 0\n      }, {\n        name: 'INT',\n        base: 10,\n        mod: 0\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(NewCharacter, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      debugger;\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      // When I change a field, I want to update what's in total value\n      this.setState({\n        value: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        id: \"full-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        id: \"name-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        id: \"char-name\",\n        ref: \"name\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })), React.createElement(Table, {\n        bordered: true,\n        size: \"sm\",\n        id: \"stat-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Stat\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Base\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"+\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Mods\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"=\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Value\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.state.stats.map(function (stat) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, stat.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          value: stat.base,\n          onChange: function onChange(event) {},\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \"+\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          value: stat.mod,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"=\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          readOnly: true,\n          value: stat.base + stat.mod,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        })));\n      }))), React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        id: \"save\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Save\"));\n    }\n  }]);\n\n  return NewCharacter;\n}(Component);\n\nexport { NewCharacter as default };","map":{"version":3,"sources":["/Users/sshepherd/Desktop/code/hackweek-feb2019/shep-react/rpgsheet_express/client/src/components/NewCharacter.js"],"names":["React","Component","Form","Table","Button","NewCharacter","props","state","name","stats","base","mod","event","setState","value","target","handleSubmit","handleChange","map","stat"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form'\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button';\nimport '../styles/StatsForm.css';\nimport '../styles/StatGrid.css';\nimport '../styles/NameField.css';\nimport '../styles/SaveButton.css';\n\nexport default class NewCharacter extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      name: '',\n      stats: [\n        {\n          name: 'STR',\n          base: 10,\n          mod: 0,\n        },\n        {\n          name: 'DEX',\n          base: 10,\n          mod: 0,\n        },\n        {\n          name: 'INT',\n          base: 10,\n          mod: 0,\n        }\n      ]\n    }\n  }\n\n  handleSubmit() {\n    debugger\n  }\n\n  handleChange(event) {\n    // When I change a field, I want to update what's in total value\n    this.setState({value: event.target.value});\n  }\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit} id='full-form'>\n        {/*<div><NameField/></div>*/}\n        <label id='name-field'>\n          Name:\n          <input type=\"text\" id=\"char-name\" ref=\"name\" onChange={this.handleChange}/>\n        </label>\n\n        {/*<div><StatGrid/></div>*/}\n        <Table bordered size=\"sm\" id=\"stat-table\">\n          <thead>\n            <tr>\n              <th>Stat</th>\n              <th>Base</th>\n              <th>+</th>\n              <th>Mods</th>\n              <th>=</th>\n              <th>Value</th>\n            </tr>\n          </thead>\n          <tbody>\n            { this.state.stats.map(stat =>\n              <tr>\n                <td>{stat.name}</td>\n                <td><input type=\"number\" value={stat.base} onChange={(event)=>{}}/></td>\n                <td>+</td>\n                <td><input type=\"number\" value={stat.mod}/></td>\n                <td>=</td>\n                <td><input type=\"number\" readOnly value={stat.base + stat.mod}/></td>\n              </tr>\n            )}\n          </tbody>\n        </Table>\n\n        {/*<div><SaveButton/></div>*/}\n        <Button variant=\"primary\" type=\"submit\" id=\"save\">Save</Button>\n      </Form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}